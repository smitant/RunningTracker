@model WebApplication2.Models.GraphingModel.GraphingModel


@{
    ViewData["Title"] = "Graph";
}

<h2>My Data Visualization</h2>

<input type="hidden" id="dates" data-value="@ViewBag.Dates" />
<html>

<head>
    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawLineChart);
        google.charts.setOnLoadCallback(drawColumnChart);

        var dates = $("#dates").data("value");
       // var dates = '@(ViewBag.Dates)';
        console.log(dates.toString);
        var dateArr = [];
        for(date of dates){
            datArr.push(date);
        }


        // Callback that creates and populates a data table,
        // instantiates the line chart, passes in the data and
        // draws it.
        function drawLineChart() {

            // Create the data table.

            //have datatable sent in as a parameter, created in model
            var data1 = new google.visualization.DataTable();
            //TODO
            //change from string to date or change when pulling from DB
            //string is discrete, date is continuous, might look better as
            //discrete
            data1.addColumn('string', 'Date');
            data1.addColumn('number', 'Steps');

         
      //      var steps = (ViewBag.Steps);
       //     var stepArr = [];
       //     for(s of steps){
      //          stepArr.push(s);
      //      }

       //     var j = 0;
       //     while(j < dateArr.length && j< stepArr.length){
      //          data1.addRows(dateArr[j], stepArr[j]);
      //          j++;
       //     }

            /*
            //dates
            data1.addRows([

              ['11/9/2016', 3000],
  ['11/10/2016', 1000],
  ['11/11/2016', 10000],
  ['11/12/2016', 1500],
  ['11/13/2016', 2898],
  ['11/14/2016', 2898],
  ['11/15/2016', 2898],
  ['11/16/2016', 2898],
  ['11/17/2016', 2898],
  ['11/18/2016', 2898],
  ['11/19/2016', 2898],
  ['11/20/2016', 2898],
  ['11/21/2016', 2898],
  ['11/22/2016', 2898],
  ['11/23/2016', 2898]
            ]);
*/
            // Set chart options
            var options1 = {
                'title': 'Number of Steps Taken Each Day',
                titleTextStyle: { fontSize: 24, bold: true },
                //adjust vaxis for date formats
                //adjust haxis for how squashed it is
                ' chartArea': { width: '100%', height: '100%' },
                animation: {
                    "startup": true,
                    "duration": 2000,
                    "easing": 'out'
                },
                //revisit explorer
                explorer: {}
            };

            // Instantiate and draw our chart, passing in some options.
            var chart1 = new google.visualization.LineChart(document.getElementById('lineChart_div'));
            chart1.draw(data1, options1);
        }
        function drawColumnChart() {
            // Create the data table.

            //have datatable sent in as a parameter, created in model
            var data2 = new google.visualization.DataTable();
            data2.addColumn('string', 'Date');
            data2.addColumn('number', 'Minimum Heartrate');
            data2.addColumn('number', 'Average Heartrate');
            data2.addColumn('number', 'Maximum Heartrate');
            //dates
            //TODO
            data2.addRows([

              ['11/9/2016', 50, 75.5, 105],
          ['11/10/2016', 63, 72, 80],
          ['11/11/2016', 60, 76, 106],
          ['11/12/2016', 58, 69, 92],
          ['11/13/2016', 60, 82, 120]
            ]);

            // Set chart options
            var options2 = {
                'title': 'Heartrate Everyday measured in Beats Per Minutes (BPM)',
                titleTextStyle: { fontSize: 24, bold: true },
                //adjust vaxis for date formats
                //adjust haxis for how squashed it is
                ' chartArea': { width: '100%', height: '100%' },
                animation: {
                    "startup": true,
                    "duration": 2000,
                    "easing": 'out'
                },
                //revisit explorer
                explorer: {}
            };

            // Instantiate and draw our chart, passing in some options.
            var chart2 = new google.visualization.ColumnChart(document.getElementById('colChart_div'));
            chart2.draw(data2, options2);


        }
    </script>
</head>

<body>
    <!--Div that will hold the line chart-->

    <div id="lineChart_div" style="margin:50px,inherit"></div>

    <!--Put formatting in between charts-->
    <hr>

    <div id="colChart_div" style="margin:50px,inherit"></div>

    <hr>
    <div id="displayStats" style="margin:50px,inherit;font-size:18px;background-color:#f1f1f1;box-shadow:0,2px,4px,0,rgba(0,0,0,0.16),0,2px,10px,0,rgba(0,0,0,0.12);display:block">
        <table id="statsTable">
            <!--Actual table created in script below-->
        </table>
    </div>

    <script>
        var table = document.getElementById("statsTable");
        var row1 = table.insertRow(0);
        var cell1 = row1.insertCell(0);
        var cell2 = row1.insertCell(1);
        cell1.innerHTML = "The average number of steps you take per day is: &nbsp;&nbsp;&nbsp;";
        cell2.innerHTML = avgSteps();

        var row2 = table.insertRow(1);
        var cell3 = row2.insertCell(0);
        var cell4 = row2.insertCell(1);
        cell3.innerHTML = "Your overall average heartrate (BPM) is:";
        cell4.innerHTML = avgHeartrate();

        var row3 = table.insertRow(2);
        var cell5 = row3.insertCell(0);
        var cell6 = row3.insertCell(1);
        cell5.innerHTML = "Your overall maximum heartrate (BPM) is:";
        cell6.innerHTML = maxHeartrate();

        var row4 = table.insertRow(3);
        var cell7 = row4.insertCell(0);
        var cell8 = row4.insertCell(1);
        cell7.innerHTML = "Your overal minimum heartrate (BPM) is:";
        cell8.innerHTML = minHeartrate();

        function avgSteps() {
            return 5000;
        }

        function avgHeartrate() {
            return 78;
        }

        function maxHeartrate() {
            return 120;
        }

        function minHeartrate() {
            return 30;
        }

    </script>
</body>
</html>
